Index: inc/msort.php
===================================================================
--- inc/msort.php
+++ inc/msort.php
@@ -212,10 +212,12 @@
     $level = count($group_opts['key']) - 1;
     $prevs = array();
     $results = array();
     $idx = 0;
 
+    if (empty($sort_array)) return array();
+
     foreach($sort_array as $row) {
         _add_heading($results, $sort_array, $group_opts, $level, $idx, $prevs);
         $result = array(0); // basic item (page link) is level 0
         for ($i = 0; $i < count($keys); $i++) {
             $result[] = $row[$keys[$i]];
@@ -225,15 +227,15 @@
     }
     return $results;
 }
 /**
  * as above, but by args:
-*                    AS ARGS:
-*                              key, type, dformat [,key, type, dformat]... [,real_dates]
-*                              key      = group by key/column
-*                              type     = one of the MGROUP types
-*                              dformat  = date format (if used)
+ *                    AS ARGS:
+ *                              key, type, dformat [,key, type, dformat]... [,real_dates]
+ *                              key      = group by key/column
+ *                              type     = one of the MGROUP types
+ *                              dformat  = date format (if used)
  *
  * @param array $sort_array
  * @param array $cols
  * @param mixed $group_opts
  */

Index: plugin.info.txt
===================================================================
--- plugin.info.txt
+++ plugin.info.txt
@@ -1,8 +1,8 @@
 ï»¿base    pagequery
 author  Symon Bent
 email   hendrybadao@gmail.com
-date    2011-04-14
+date    2011-07-14
 name    PageQuery Plugin
 desc    Search for (fulltext) and list wiki pages, sorted and optionally grouped by name, date, creator, abc, etc. in columns. Insert the pagequery markup wherever you want your list to appear.  E.g.{{pagequery>[query;fulltext;sort=key:direction,key2:direction;group;limit=??;cols=?;inwords;proper]}} [..] = optional
 url     http://wiki.splitbrain.org/plugin:pagequery
-version 0.7.2
+version 0.7.4

Index: syntax.php
===================================================================
--- syntax.php
+++ syntax.php
@@ -105,10 +105,11 @@
         $opt['snippet'] = array('type' => 'none');
         $opt['title'] = false;
         $opt['case'] = false;
         $opt['natsort'] = false;
         $opt['underline'] = false;
+        $opt['nomsg'] = false;
 
         foreach ($params as $param) {
             list($option, $value) = explode('=', $param);
             switch ($option) {
                 case 'fulltext':
@@ -118,10 +119,11 @@
                 case 'nostart':
                 case 'title':
                 case 'case':
                 case 'natsort':
                 case 'underline':
+                case 'nomsg':
                     $opt[$option] = true;
                     break;
                 case 'limit':
                 case 'maxns':
                     $opt[$option] = abs($value);
@@ -219,10 +221,12 @@
                 $sort_array = $this->_filter_meta($sort_array, $opt['filter']);
                 if (empty($sort_array)) {
                     $empty = true;
                     $message = $this-getLang("empty_filter");
                 }
+            } else {
+                $empty = true;
             }
 
             if ( ! $empty) {
                 // now do the sorting (inc/msort.php)
                 msort($sort_array, $sort_opts);
@@ -238,11 +242,13 @@
                         $sorted_results[] = array(0, $row['name'], $row['id'], $row['abstract']);
                     }
                 }
                 $renderer->doc .= $this->_render_list($sorted_results, $opt);
             } else {
-                $renderer->doc .= $this->_render_no_list($query, $message);
+                if ( ! $opt['nomsg']) {
+                    $renderer->doc .= $this->_render_no_list($query, $message);
+                }
             }
             return true;
         } else {
             return false;
         }
@@ -810,14 +816,14 @@
         $start = $conf['start'];
         $pos = strlen($start);
         foreach($pages as $idx => $name) {
             if ($nostart && substr($name, -$pos) == $start) {
                 unset($pages[$idx]);
+            } elseif ($maxns > 0 && (substr_count($name,':')) > $maxns) {
+                unset($pages[$idx]);
             // TODO: this function is one of slowest in the plugin; solutions?
             } elseif(auth_quickaclcheck($pages[$idx]) < AUTH_READ) {
-                unset($pages[$idx]);
-            } elseif ($maxns > 0 && (substr_count($name,':') + 1) > $maxns) {
                 unset($pages[$idx]);
             }
         }
         return $pages;
     }
@@ -834,14 +840,15 @@
         foreach ($ns_qry as $ns) {
             $regexes[] = '.*' . $ns . ':.*';
         }
         if ( ! empty($regexes)) {
             $regex = '/(' . implode('|', $regexes) . ')/';
-            return array_values(preg_grep($regex, $pages, $invert));
+            $result = array_values(preg_grep($regex, $pages, $invert));
         } else {
-            return $pages;
+            $result = $pages;
         }
+        return $result;
     }
 
     /**
      * filter array of pages by specific meta data keys (or columns)
      *

